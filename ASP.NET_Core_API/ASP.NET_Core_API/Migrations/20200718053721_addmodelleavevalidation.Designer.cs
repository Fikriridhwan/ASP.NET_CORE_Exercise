// <auto-generated />
using System;
using ASP.NET_Core_API.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace ASP.NET_Core_API.Migrations
{
    [DbContext(typeof(apiContext))]
    [Migration("20200718053721_addmodelleavevalidation")]
    partial class addmodelleavevalidation
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.1.14-servicing-32113")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("ASP.NET_Core_API.Models.Employee", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name");

                    b.Property<int>("Nip");

                    b.Property<int>("annualLeaveRemaining");

                    b.HasKey("Id");

                    b.ToTable("TB_M_Employee");
                });

            modelBuilder.Entity("ASP.NET_Core_API.Models.LeaveApplication", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("EmployeeId");

                    b.Property<int>("LeaveDuration");

                    b.Property<string>("Reason");

                    b.HasKey("Id");

                    b.HasIndex("EmployeeId");

                    b.ToTable("TB_R_LeaveApplication");
                });

            modelBuilder.Entity("ASP.NET_Core_API.Models.LeaveValidation", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Action");

                    b.Property<int?>("LeaveApplicationId");

                    b.Property<int?>("ManagerId");

                    b.Property<int>("ValidDuration");

                    b.HasKey("Id");

                    b.HasIndex("LeaveApplicationId");

                    b.HasIndex("ManagerId");

                    b.ToTable("TB_R_LeaveValidation");
                });

            modelBuilder.Entity("ASP.NET_Core_API.Models.Manager", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Division");

                    b.Property<int?>("EmployeeId");

                    b.HasKey("Id");

                    b.HasIndex("EmployeeId");

                    b.ToTable("TB_R_Manager");
                });

            modelBuilder.Entity("ASP.NET_Core_API.Models.LeaveApplication", b =>
                {
                    b.HasOne("ASP.NET_Core_API.Models.Employee", "Employee")
                        .WithMany()
                        .HasForeignKey("EmployeeId");
                });

            modelBuilder.Entity("ASP.NET_Core_API.Models.LeaveValidation", b =>
                {
                    b.HasOne("ASP.NET_Core_API.Models.LeaveApplication", "LeaveApplication")
                        .WithMany()
                        .HasForeignKey("LeaveApplicationId");

                    b.HasOne("ASP.NET_Core_API.Models.Manager", "Manager")
                        .WithMany()
                        .HasForeignKey("ManagerId");
                });

            modelBuilder.Entity("ASP.NET_Core_API.Models.Manager", b =>
                {
                    b.HasOne("ASP.NET_Core_API.Models.Employee", "Employee")
                        .WithMany()
                        .HasForeignKey("EmployeeId");
                });
#pragma warning restore 612, 618
        }
    }
}
